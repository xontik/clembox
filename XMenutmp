#include "XMenu.h"


XMenu::XMenu(XMenuStruct* xms){
    _menu = xms;
}
void XMenu::changeMenu(XMenuStruct *xms){
  _menu = xms;
}
void XMenu::displayMenuS(){
    int i;
    
    Serial.println(_menu->title);
    if(_menu->nbItems == 2){
       
        Serial.println(_menu->items[_choice]);
        Serial.print("->");
        Serial.println(_menu->items[1-_choice]);  
      
    }else{
      if(_choice == 1){
        Serial.println(_menu->items[_menu->nbItems-1]);
        Serial.print("->");
        Serial.println(_menu->items[0]);
        Serial.println(_menu->items[1]);
    }else if(_choice == _menu->nbItems){
        Serial.println(_menu->items[_menu->nbItems-2]);
        Serial.print("->");
        Serial.println(_menu->items[_menu->nbItems-1]);
        Serial.println(_menu->items[0]);
    }else{
        Serial.println(_menu->items[_choice-2]);
        Serial.print("->");
        Serial.println(_menu->items[_choice-1]);
        Serial.println(_menu->items[_choice]);
    }
    }
    
}


void XMenu::displayMenu(){
    int i;
    displayMenuS();    
    lcd.clear();
    lcd.print("Menu : ");
    lcd.print(_menu->title);
    
    if(_menu->nbItems == 2){
        lcd.setCursor(0,_choice);
        lcd.write(ARROW_RIGHT);
        lcd.setCursor(1,1);
        lcd.print(_menu->items[0]);
        lcd.setCursor(1,2);
        lcd.print(_menu->items[1]);  
      
    }else if(_menu->nbItems > 3){
      if(_choice == 1){
        lcd.setCursor(1,1);
        lcd.print(_menu->items[_menu->nbItems-1]);
        lcd.setCursor(0,2);
        lcd.write(ARROW_RIGHT);
        lcd.setCursor(1,2);
        lcd.print(_menu->items[0]);
        lcd.setCursor(1,3);
        lcd.print(_menu->items[1]);
    }else if(_choice == _menu->nbItems){
      lcd.setCursor(1,1);
        lcd.print(_menu->items[_menu->nbItems-2]);
        lcd.setCursor(0,2);
        lcd.write(ARROW_RIGHT);
        lcd.setCursor(1,2);
        lcd.print(_menu->items[_menu->nbItems-1]);
        lcd.setCursor(1,3);
        lcd.print(_menu->items[0]);
    }else{
      lcd.setCursor(1,1);
        lcd.print(_menu->items[_choice-2]);
        lcd.setCursor(0,2);
        lcd.write(ARROW_RIGHT);
        lcd.setCursor(1,2);
        lcd.print(_menu->items[_choice-1]);
        lcd.setCursor(1,3);
        lcd.print(_menu->items[_choice]);
    }
   }else if(_menu->nbItems == 3){
      
        lcd.setCursor(1,1);
        lcd.print(_menu->items[0]);
        lcd.setCursor(1,2);
        lcd.print(_menu->items[1]);
        lcd.setCursor(1,3);
        lcd.print(_menu->items[2]);
        lcd.setCursor(0,_choice);
        lcd.write(ARROW_RIGHT);
    }
   
    
}

void XMenu::doMenu() {
  XButtonId button;
  bool keephere = true;
  while(keephere){
    displayMenu();
   
    // Wait relache boutons 
    button = input.buttonPushed();
    //gestions des differents cas
    switch(button){
      case BT_UP:
        _choice++;
      break;
      case BT_DOWN:
        _choice--;
      break;
      case BT_LEFT:
        keephere = false;
      break;
      case BT_RIGHT:
      case BT_VALID:
        _menu->calbackFct(_choice);
      break;
    }
    if(_choice > _menu->nbItems){
      _choice = 1;
    }
    if(_choice < 1){
      _choice = _menu->nbItems;
    }
  }
}

const char* mainMenuItems[] = { "Play", "Stats","Options"};
const XMenuStruct mainMenu = {
  "Principal",
  mainMenuItems,
  3,
  &doMainMenu
};
const char* playMenuItems[] = { "Jouer", "Recommencer", "Cheat"};
const XMenuStruct playMenu = {
  "Jouer",
  playMenuItems,
  3,
  &doPlayMenu
};
const char* statsMenuItems[] = { "Progression", "Best progression", "Nombre demarrage"};
const XMenuStruct statsMenu = {
  "Statistiques",
  statsMenuItems,
  3,
  &doStatsMenu
};
const char* optionsMenuItems[] = { "Audio", "Reset all"};
const XMenuStruct optionsMenu = {
  "Options",
  optionsMenuItems,
  2,
  &doOptionsMenu
};
void doMainMenu(uint8_t selected){
  
  switch(selected){
   
  }  
}
void doPlayMenu(uint8_t selected){
    
}
void doStatsMenu(uint8_t selected){
    return;
}
void doOptionsMenu(uint8_t selected){
    
}

 

